package com.yingge.qa.controller;

import java.util.List;

import com.yingge.qa.entity.RoleDTO;
import com.yingge.qa.service.RoleService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

/**
 * This class was generated by Ali-Generator
 * @author zhaoxiongy@163.com
 */
@RestController
@RequestMapping(value = "/Role")
public class RoleController {
    @Autowired
    private RoleService roleService;

    /**
     * 根据参数查找
     */
    @ResponseBody
    @GetMapping("/find")
    public RoleDTO find(@RequestParam(required = false) Integer id, @RequestParam(required = false) Byte isDelete, @RequestParam(required = false) String roleCode, @RequestParam(required = false) String roleName, @RequestParam(required = false) String roleDesc, @RequestParam(required = false) Byte roleStatus, @RequestParam(required = false) Byte isAdmin) {
        RoleParameter param = new RoleParameter();
        param.setId(id);
        param.setIsDelete(isDelete);
        param.setRoleCode(roleCode);
        param.setRoleName(roleName);
        param.setRoleDesc(roleDesc);
        param.setRoleStatus(roleStatus);
        param.setIsAdmin(isAdmin);
        return roleService.find(param);
    }

    /**
     * 列表查询
     */
    @ResponseBody
    @GetMapping("/list")
    public List<RoleDTO> list(@RequestParam(required = false) Integer id, @RequestParam(required = false) Byte isDelete, @RequestParam(required = false) String roleCode, @RequestParam(required = false) String roleName, @RequestParam(required = false) String roleDesc, @RequestParam(required = false) Byte roleStatus, @RequestParam(required = false) Byte isAdmin) {
        RoleParameter param = new RoleParameter();
        param.setId(id);
        param.setIsDelete(isDelete);
        param.setRoleCode(roleCode);
        param.setRoleName(roleName);
        param.setRoleDesc(roleDesc);
        param.setRoleStatus(roleStatus);
        param.setIsAdmin(isAdmin);
        return roleService.list(param);
    }

    /**
     * 创建
     */
    @RequestMapping("/create")
    public void create(@RequestParam(required = false) Integer id, @RequestParam(required = false) Byte isDelete, @RequestParam(required = false) String roleCode, @RequestParam(required = false) String roleName, @RequestParam(required = false) String roleDesc, @RequestParam(required = false) Byte roleStatus, @RequestParam(required = false) Byte isAdmin) {
        RoleParameter param = new RoleParameter();
        param.setId(id);
        param.setIsDelete(isDelete);
        param.setRoleCode(roleCode);
        param.setRoleName(roleName);
        param.setRoleDesc(roleDesc);
        param.setRoleStatus(roleStatus);
        param.setIsAdmin(isAdmin);
        roleService.create(param);
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    public void updateSelective(@RequestParam(required = false) Integer id, @RequestParam(required = false) Byte isDelete, @RequestParam(required = false) String roleCode, @RequestParam(required = false) String roleName, @RequestParam(required = false) String roleDesc, @RequestParam(required = false) Byte roleStatus, @RequestParam(required = false) Byte isAdmin) {
        RoleDTO dto = new RoleDTO();
        dto.setId(id);
        dto.setIsDelete(isDelete);
        dto.setRoleCode(roleCode);
        dto.setRoleName(roleName);
        dto.setRoleDesc(roleDesc);
        dto.setRoleStatus(roleStatus);
        dto.setIsAdmin(isAdmin);
        RoleParameter param = new RoleParameter();
        param.setId(id);
        param.setIsDelete(isDelete);
        param.setRoleCode(roleCode);
        param.setRoleName(roleName);
        param.setRoleDesc(roleDesc);
        param.setRoleStatus(roleStatus);
        param.setIsAdmin(isAdmin);
        roleService.updateSelective(dto, param);
    }
}