package com.yingge.qa.service.impl;

import com.yingge.qa.controller.AnswerParameter;
import com.yingge.qa.dao.AnswerDAO;
import com.yingge.qa.entity.AnswerDO;
import com.yingge.qa.entity.AnswerParam.Criteria;
import com.yingge.qa.entity.AnswerParam;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.yingge.qa.entity.AnswerDTO;
import com.yingge.qa.service.AnswerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by Ali-Generator
 * @author zhaoxiongy@163.com
 */
@Service
public class AnswerServiceImpl implements AnswerService {
    @Autowired
    private AnswerDAO answerDAO;

    @Autowired
    private AnswerConverter answerConverter;

    /**
     * 根据参数统计总数
     * @param param
     */
    @Override
    public long count(AnswerParameter param) {
        AnswerParam answerParam = new AnswerParam();
        Criteria criteria = answerParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        return answerDAO.countByParam(answerParam);
    }

    /**
     * 根据参数查询
     * @param param
     */
    @Override
    public AnswerDTO find(AnswerParameter param) {
        AnswerParam answerParam = new AnswerParam();
        Criteria criteria = answerParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        List<AnswerDO> list = answerDAO.selectByParam(answerParam);
        if (null == list || list.isEmpty()) {
                return null;
        }
        return answerConverter.convertFromDO(list.get(0));
    }

    /**
     * 列表查询
     * @param param
     */
    @Override
    public List<AnswerDTO> list(AnswerParameter param) {
        AnswerParam answerParam = new AnswerParam();
        Criteria criteria = answerParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        List<AnswerDO> list = answerDAO.selectByParam(answerParam);
        if (null == list || list.isEmpty()) {
                return null;
        }
        List<AnswerDTO> result = new ArrayList<>();
        for (AnswerDO record : list) {
            AnswerDTO answerDTO = answerConverter.convertFromDO(record);
                result.add(answerDTO);
        }
        return result;
    }

    /**
     * 创建
     * @param param
     */
    @Override
    public void create(AnswerParameter param) {
        AnswerDO record = new AnswerDO();
        record.setId(param.getId());
        record.setGmtCreate(new Date());
        record.setGmtModified(new Date());
        record.setAnswerContent(param.getAnswerContent());
        record.setProblemId(param.getProblemId());
        record.setRespondent(param.getRespondent());
        record.setAnswerTime(param.getAnswerTime());
        record.setCount(param.getCount());
        answerDAO.insert(record);
    }

    /**
     * 修改
     * @param dto
     * @param param
     */
    @Override
    public void updateSelective(AnswerDTO dto, AnswerParameter param) {
        AnswerDO record = answerConverter.convertFromDTO(dto);
        record.setGmtModified(new Date());
        AnswerParam answerParam = new AnswerParam();
        Criteria criteria = answerParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        answerDAO.updateByParamSelective(record, answerParam);
    }
}