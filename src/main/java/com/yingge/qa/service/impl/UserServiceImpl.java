package com.yingge.qa.service.impl;

import com.yingge.qa.dao.UserDAO;
import com.yingge.qa.entity.UserDO;
import com.yingge.qa.entity.UserDTO;
import com.yingge.qa.entity.UserParam.Criteria;
import com.yingge.qa.entity.UserParam;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.yingge.qa.controller.UserConverter;
import com.yingge.qa.controller.UserParameter;
import com.yingge.qa.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by Ali-Generator
 * @author zhaoxiongy@163.com
 */
@Service
public class UserServiceImpl implements UserService {
    @Autowired
    private UserDAO userDAO;

    @Autowired
    private UserConverter userConverter;

    /**
     * 根据参数统计总数
     * @param param
     */
    @Override
    public long count(UserParameter param) {
        UserParam userParam = new UserParam();
        Criteria criteria = userParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        return userDAO.countByParam(userParam);
    }

    /**
     * 根据参数查询
     * @param param
     */
    @Override
    public UserDTO find(UserParameter param) {
        UserParam userParam = new UserParam();
        Criteria criteria = userParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        List<UserDO> list = userDAO.selectByParam(userParam);
        if (null == list || list.isEmpty()) {
                return null;
        }
        return userConverter.convertFromDO(list.get(0));
    }

    /**
     * 列表查询
     * @param param
     */
    @Override
    public List<UserDTO> list(UserParameter param) {
        UserParam userParam = new UserParam();
        Criteria criteria = userParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        List<UserDO> list = userDAO.selectByParam(userParam);
        if (null == list || list.isEmpty()) {
                return null;
        }
        List<UserDTO> result = new ArrayList<>();
        for (UserDO record : list) {
            UserDTO userDTO = userConverter.convertFromDO(record);
                result.add(userDTO);
        }
        return result;
    }

    /**
     * 创建
     * @param param
     */
    @Override
    public void create(UserParameter param) {
        UserDO record = new UserDO();
        record.setId(param.getId());
        record.setIsAdmin(param.getIsAdmin());
        record.setLoginName(param.getLoginName());
        record.setPassword(param.getPassword());
        record.setSecretKey(param.getSecretKey());
        record.setMobile(param.getMobile());
        record.setEmail(param.getEmail());
        record.setSex(param.getSex());
        record.setUserStatus(param.getUserStatus());
        record.setGmtCreate(new Date());
        record.setGmtModified(new Date());
        record.setIsDelete(param.getIsDelete());
        record.setCreatorId(param.getCreatorId());
        record.setModifierId(param.getModifierId());
        userDAO.insert(record);
    }

    /**
     * 修改
     * @param dto
     * @param param
     */
    @Override
    public void updateSelective(UserDTO dto, UserParameter param) {
        UserDO record = userConverter.convertFromDTO(dto);
        record.setGmtModified(new Date());
        UserParam userParam = new UserParam();
        Criteria criteria = userParam.createCriteria();
        //TODO 注意：需要根据业务实际情况自行编写WHERE条件
        userDAO.updateByParamSelective(record, userParam);
    }
}