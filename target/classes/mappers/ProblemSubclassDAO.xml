<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yingge.qa.dao.ProblemSubclassDAO">
  <resultMap id="BaseResultMap" type="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="classification_name" jdbcType="VARCHAR" property="classificationName" />
    <result column="subclass_name" jdbcType="VARCHAR" property="subclassName" />
    <result column="respondent" jdbcType="BIGINT" property="respondent" />
  </resultMap>
  <sql id="Param_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Param_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="problemSubclassParam.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, gmt_create, gmt_modified, classification_name, subclass_name, respondent
  </sql>
  <select id="selectByParam" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinctSql != null">
      distinct ${@com.alibaba.security.SecurityUtil@trimSql4OrderBy(distinctSql)}
    </if>
    <if test="distinctSql == null">
      <include refid="Base_Column_List" />
    </if>
    from problem_subclass
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${@com.alibaba.security.SecurityUtil@trimSql4OrderBy(orderByClause)}
    </if>
    <if test="page">
      limit #{pageIndex},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from problem_subclass
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from problem_subclass
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByParam">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from problem_subclass
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
    <if test="page">
      limit #{pageSize}
    </if>
  </delete>
  <insert id="insert" parameterType="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into problem_subclass (gmt_create, gmt_modified, classification_name, 
      subclass_name, respondent)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{classificationName,jdbcType=VARCHAR}, 
      #{subclassName,jdbcType=VARCHAR}, #{respondent,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into problem_subclass
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="classificationName != null">
        classification_name,
      </if>
      <if test="subclassName != null">
        subclass_name,
      </if>
      <if test="respondent != null">
        respondent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="classificationName != null">
        #{classificationName,jdbcType=VARCHAR},
      </if>
      <if test="subclassName != null">
        #{subclassName,jdbcType=VARCHAR},
      </if>
      <if test="respondent != null">
        #{respondent,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByParam" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from problem_subclass
    <if test="_parameter != null">
      <include refid="Param_Where_Clause" />
    </if>
  </select>
  <update id="updateByParamSelective">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem_subclass
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classificationName != null">
        classification_name = #{record.classificationName,jdbcType=VARCHAR},
      </if>
      <if test="record.subclassName != null">
        subclass_name = #{record.subclassName,jdbcType=VARCHAR},
      </if>
      <if test="record.respondent != null">
        respondent = #{record.respondent,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Param_Where_Clause" />
    </if>
  </update>
  <update id="updateByParam">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem_subclass
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      classification_name = #{record.classificationName,jdbcType=VARCHAR},
      subclass_name = #{record.subclassName,jdbcType=VARCHAR},
      respondent = #{record.respondent,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Param_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem_subclass
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="classificationName != null">
        classification_name = #{classificationName,jdbcType=VARCHAR},
      </if>
      <if test="subclassName != null">
        subclass_name = #{subclassName,jdbcType=VARCHAR},
      </if>
      <if test="respondent != null">
        respondent = #{respondent,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem_subclass
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      classification_name = #{classificationName,jdbcType=VARCHAR},
      subclass_name = #{subclassName,jdbcType=VARCHAR},
      respondent = #{respondent,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="com.yingge.qa.entity.ProblemSubclassDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into problem_subclass
    <trim prefix="(" suffix=")" suffixOverrides=",">
      gmt_create,gmt_modified,classification_name,subclass_name,respondent,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      <trim suffixOverrides=",">
        #{item.gmtCreate,jdbcType=TIMESTAMP},#{item.gmtModified,jdbcType=TIMESTAMP},#{item.classificationName,jdbcType=VARCHAR},#{item.subclassName,jdbcType=VARCHAR},#{item.respondent,jdbcType=BIGINT},
      </trim>
      )
    </foreach>
  </insert>
</mapper>